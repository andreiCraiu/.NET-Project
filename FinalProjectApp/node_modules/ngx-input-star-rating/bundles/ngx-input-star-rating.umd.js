(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/forms', '@angular/common'], factory) :
	(factory((global['ngx-input-star-rating'] = {}),global.ng.core,global.ng.forms,global.ng.common));
}(this, (function (exports,core,forms,common) { 'use strict';

var starIcons = {
    outline: 'outline',
    full: 'full',
    half: 'half'
};
var NgxInputStarRatingComponent = /** @class */ (function () {
    function NgxInputStarRatingComponent() {
        this._value = 0;
        this.count = 5;
        this.disabled = false;
        this.starIcons = starIcons;
        this.buttons = [];
        this.onChange = function (_value) { };
        this.onTouched = function () { };
    }
    Object.defineProperty(NgxInputStarRatingComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (val) {
            this._value = val;
            this.onChange(val);
            this.valueUpdate(this._value);
            this.onTouched();
        },
        enumerable: true,
        configurable: true
    });
    NgxInputStarRatingComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    NgxInputStarRatingComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    NgxInputStarRatingComponent.prototype.writeValue = function (value) {
        if (value !== this.value) {
            this.value = value;
        }
    };
    NgxInputStarRatingComponent.prototype.ngOnInit = function () {
        for (var i = 0; i < this.count; i++) {
            this.buttons.push({ active: false, icon: starIcons.outline });
        }
        this.valueUpdate(this.value);
    };
    NgxInputStarRatingComponent.prototype.ngOnChanges = function (changes) {
        if (changes["value"] && changes["value"].currentValue) {
            this.valueUpdate(changes["value"].currentValue);
        }
    };
    NgxInputStarRatingComponent.prototype.rate = function (index) {
        this.buttons.forEach(function (btn, i) {
            if (i <= index) {
                btn.icon = starIcons.full;
            }
            else {
                btn.icon = starIcons.outline;
            }
        });
        var total = this.buttons.reduce(function (prev, next) {
            if (next.icon === starIcons.full) {
                return prev + 1;
            }
            else {
                return prev;
            }
        }, 0);
        this.value = total;
    };
    NgxInputStarRatingComponent.prototype.mouseEnter = function (index) {
        this.buttons.forEach(function (btn, i) {
            if (i <= index) {
                btn.active = true;
            }
            else {
                btn.active = false;
            }
        });
    };
    NgxInputStarRatingComponent.prototype.mouseLeave = function () {
        this.buttons.forEach(function (i) { return (i.active = false); });
    };
    NgxInputStarRatingComponent.prototype.valueUpdate = function (value) {
        this.buttons.forEach(function (btn, i) {
            var starValue = i + 1;
            if (value >= starValue) {
                btn.icon = starIcons.full;
            }
            if (value >= starValue - 0.5 && value < starValue) {
                btn.icon = starIcons.half;
            }
        });
    };
    return NgxInputStarRatingComponent;
}());
NgxInputStarRatingComponent.decorators = [
    { type: core.Component, args: [{
                selector: 'ngx-input-star-rating',
                template: "<div class=\"input-rating\" (mouseleave)=\"mouseLeave()\">\n  <button type=\"button\" [disabled]=\"disabled\" *ngFor=\"let btn of buttons; let i = index\" class=\"input-rating__btn\" (click)=\"rate(i)\" [attr.aria-label]=\"'rate ' + (i + 1) + ' of ' + buttons.length\"\n    (mouseenter)=\"mouseEnter(i)\">\n    <span *ngIf=\"btn.active || btn.icon === starIcons.full\" class=\"full\">\n      <ng-container *ngTemplateOutlet=\"star\"></ng-container>\n    </span>\n    <ng-container *ngIf=\"!btn.active\">\n      <span *ngIf=\"btn.icon === starIcons.half\" class=\"half\">\n        <ng-container *ngTemplateOutlet=\"star\"></ng-container>\n        <svg height=\"25\" width=\"10\" class=\"star-half\">\n          <polygon points=\"9.9, 1.1, 3.3, 21.78, 19.8, 8.58, 0, 8.58, 16.5, 21.78\" style=\"fill-rule:nonzero;\"/>\n        </svg>\n      </span>\n      <span *ngIf=\"btn.icon !== starIcons.full && btn.icon !== starIcons.half\" class=\"empty\">\n        <ng-container *ngTemplateOutlet=\"star\"></ng-container>\n      </span>\n    </ng-container>\n  </button>\n</div>\n<ng-template #star>\n  <svg height=\"25\" width=\"23\" class=\"star\">\n    <polygon points=\"9.9, 1.1, 3.3, 21.78, 19.8, 8.58, 0, 8.58, 16.5, 21.78\" style=\"fill-rule:nonzero;\"/>\n  </svg>\n</ng-template>",
                styles: ["*, *::before, *::after{\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box; }\n:host{\n  display:inline-block; }\n.star{\n  fill:#ccc; }\n.full .star{\n  fill:gold; }\n.half .star-half{\n  fill:gold; }\nbutton{\n  background-color:transparent;\n  border:0;\n  cursor:pointer;\n  position:relative;\n  width:30px;\n  height:25px; }\n  button svg{\n    position:absolute;\n    top:0;\n    left:5px; }\n"],
                providers: [
                    {
                        provide: forms.NG_VALUE_ACCESSOR,
                        useExisting: core.forwardRef(function () { return NgxInputStarRatingComponent; }),
                        multi: true
                    }
                ]
            },] },
];
NgxInputStarRatingComponent.ctorParameters = function () { return []; };
NgxInputStarRatingComponent.propDecorators = {
    "_value": [{ type: core.Input, args: ['value',] },],
    "count": [{ type: core.Input },],
    "disabled": [{ type: core.Input },],
};
var NgxInputStarRatingModule = /** @class */ (function () {
    function NgxInputStarRatingModule() {
    }
    return NgxInputStarRatingModule;
}());
NgxInputStarRatingModule.decorators = [
    { type: core.NgModule, args: [{
                imports: [
                    common.CommonModule
                ],
                declarations: [
                    NgxInputStarRatingComponent
                ],
                exports: [
                    NgxInputStarRatingComponent
                ]
            },] },
];
NgxInputStarRatingModule.ctorParameters = function () { return []; };

exports.NgxInputStarRatingModule = NgxInputStarRatingModule;
exports.Éµa = NgxInputStarRatingComponent;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-input-star-rating.umd.js.map
